<div id="settings_camera_calibration" xdata-bind="allowBindings: true">
    <h4>{{ _('Camera Calibration') }}</h4>
    <form class="form-horizontal">
        <div class="control-group">
            <label class="control-label" for="settings-cam-offset-x">{{ _('Offset X') }}</label>
            <div class="controls">
                <input type="number" class="input-block-level" data-bind="value: settings.plugins.mrbeam.camera_offset_x">
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="settings-cam-offset-y">{{ _('Offset Y') }}</label>
            <div class="controls">
                <input type="number" class="input-block-level" data-bind="value: settings.plugins.mrbeam.camera_offset_y">
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="settings-cam-scale">{{ _('Scale') }}</label>
            <div class="controls">
                <input type="number" step="0.01" min="0" class="input-block-level" data-bind="value: settings.plugins.mrbeam.camera_scale">
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="settings-cam-rotation">{{ _('Rotation') }}</label>
            <div class="controls">
                <input type="number" step="0.01" class="input-block-level" data-bind="value: settings.plugins.mrbeam.camera_rotation">
            </div>
        </div>
    </form>
        
	<div id="webcam_wrapper_settings">
		<img id="webcam_image_settings" data-bind="css: { flipH: webcam_flipH(), flipV: webcam_flipV() },
			 style: {
				 transform: 'scale(' + settings.plugins.mrbeam.camera_scale() 
						 + ') rotate(' + settings.plugins.mrbeam.camera_rotation() + 'deg) translate(' 
						 + settings.plugins.mrbeam.camera_offset_x() +'px, '+ settings.plugins.mrbeam.camera_offset_y() + 'px)'
			 },
			 attr: { src: webcam_streamUrl() }
			 ">
	</div>
     
</div>
